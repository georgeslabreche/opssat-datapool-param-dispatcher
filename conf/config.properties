# Number of aggregations to create and enable
aggregations=4

# Flush data to file for this batch size of fetched data
flush.write.at=10

# Aggregation #1
iterations.1=5
interval.1=2000
params.get.count.1=5
params.get.type.1=Float
params.get.output.csv.1=toGround/aggregation_01.csv
params.get.output.csv.append.1=false
#params.set.count.1=0

# Aggregation #2
iterations.2=10
interval.2=1000
params.get.names.2=GNC_0005,GNC_0011,GNC_0007
params.get.output.csv.2=toGround/aggregation_02.csv
params.get.output.csv.append.2=true
#params.set.count.2=0

# Aggregation #3
iterations.3=20
interval.3=2000
params.get.count.3=8
params.get.type.3=Float
params.get.output.csv.3=toGround/aggregation_03.csv
params.get.output.csv.append.3=false
#params.set.count.3=0

# Aggregation #4
iterations.4=10
interval.4=1000
params.get.count.4=10
params.get.type.4=Float
params.get.output.csv.4=toGround/aggregation_04.csv
params.get.output.csv.append.4=false
#params.set.count.4=0

# Aggregation #5
iterations.5=20
interval.5=1000
params.get.count.5=5
params.get.type.5=Float
params.get.output.csv.5=toGround/aggregation_05.csv
params.get.output.csv.append.5=false
#params.set.count.5=0